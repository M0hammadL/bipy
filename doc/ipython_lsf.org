============================================================
Guide for getting ipython going with platform lsf on odyssey
============================================================

* Load the iPython module on Odyssey:
#+begin_example:
 module -s load hpc/ipython-0.13_python-2.7.1 &> /dev/null
#+end_example

* Create a platform lsf profile:
#+begin_example:
 ipython profile create --parallel --profile=lsf
#+end_example

* Edit ~/.config/.ipython/profile_lsf/ipcluster_config.py
Add these two lines, which tell iPython you are going to be using Platform LSF to launch
the controller and all of the worker processes (engines). Also point to
different batch template files that we will make in a second, the ones iPython
generates for LSF are not functional.
#+begin_example:
 c.IPClusterStart.controller_launcher_class = 'LSF'
 c.IPClusterStart.engine_launcher_class = 'LSF'

 c.LSFControllerLauncher.batch_template_file = u'/n/home05/kirchner/.ipython/profile_lsf/lsf.controller.template'

 c.LSFEngineSetLauncher.batch_template_file = u'/n/home05/kirchner/.ipython/profile_lsf/lsf.engine.template'
#+end_example

* Make those the controller and engine template files in the profile_lsf directory.
~/.ipython/profile_lsf/lsf.controller.template:

#+begin_example:
 #!/bin/sh
 #BSUB -q hsph
 #BSUB -J ipcontroller
 #BSUB -oo ipcontroller.o.%J
 #BSUB -eo ipcontroller.e.%J
 ipcontroller --profile-dir={profile_dir}
#+end_example

~/.ipython/profile_lsf/lsf.engine.template:
#+begin_example:
 #!/bin/sh
 #BSUB -q {queue}
 #BSUB -J ipengine[1-{n}]
 #BSUB -oo ipengine.o.%J
 #BSUB -eo ipengine.e.%J
 ipengine --profile-dir={profile_dir}
#+end_example

- Edit ~/.ipython/profile_odyssey_lsf/ipcontroller_config.py
Add these four lines, which allow the engines to talk to the Client:
#+begin_example:
 c.HubFactory.ip = '*'

 import socket
 ex_ip = socket.gethostbyname_ex(socket.gethostname())[-1][0]
 c.HubFactory.location = ex_ip
#+end_example

Add this line which sets the tmp directory to something useful, and with space on it:
#+begin_example:
 c.IPClusterStart.work_dir = u'/n/home05/kirchner/hsph_scratch/tmp/kirchner/lsf'
#+end_example

- Finally launch a mini cluster from the command line.
#+begin_example:
 bsub -q hsph -o cluster.out -e cluster.err ipcluster start -n 2 --profile=lsf
#+end_example

- Now you should be able to connect to it and go:

#+begin_src: python :export code
 from IPython.parallel import Client

 c = Client(profile="lsf")
 c.ids
 c[:].apply_sync(lambda: "Hello, World")
#+end_src

- I haven't been able to get it to work so I can connect from my laptop directly though.
It hands when trying to connect with the client. So far now it will just have to be
spawning off with nodes locally for testing. Then I ssh into ody when I want to make that
go.

- Try looking at starcluster plugins ipcluster stuff to see if you can lift what you need
from it to make your thing work.
